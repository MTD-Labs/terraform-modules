# helm-charts/nginx-controller/values-dev.yaml

controller:
  replicaCount: 2
  allowSnippetAnnotations: true
  metrics:
    enabled: true
  service:
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"

      # We'll interpolate the Terragrunt var for your ACM ARN here:
      service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "${acm_arn}"

      service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"

      # We'll interpolate the comma-joined subnets from Terragrunt:
      service.beta.kubernetes.io/aws-load-balancer-subnets: "${subnets}"
      # service.beta.kubernetes.io/aws-load-balancer-ssl-redirect: "443"

      service.beta.kubernetes.io/aws-load-balancer-security-groups: "${security_groups}"
    targetPorts:
      http: http
      # https: http
    externalTrafficPolicy: Local
    enableHttp: true
    enableHttps: false
    type: LoadBalancer
  maxmindLicenseKey: ""
  config:
    ssl-redirect: "false"
    enable-snippets: "true"
    use-forwarded-headers: "true"
    compute-full-forwarded-for: "true"
    proxy-real-ip-cidr: "0.0.0.0/0"
    annotations-risk-level: Critical
    log-format-escape-json: "true"
    use-geoip: "true"
    use-geoip2: "true"
    log-format-upstream: '{"connection": "$connection","time": "$time_iso8601", "connection_requests": "$connection_requests","remote_addr": "$remote_addr",
      "geoip2_city_country_code": "$geoip2_city_country_code",  "x_forwarded_for": "$proxy_add_x_forwarded_for",
      "request_id": "$req_id", "pid": "$pid", "msec": "$msec","remote_port": "$remote_port", "request": "$request", "body_bytes_sent": "$body_bytes_sent",
      "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time, "status": $status, "host": "$host", "http_host": "$http_host",
      "request_proto": "$server_protocol", "path": "$uri", "request_query": "$args", "request_length": $request_length, "duration": $request_time,
      "method": "$request_method", "http_referer": "$http_referer", "http_user_agent": "$http_user_agent" ,  "time_local": "$time_local", "service_name": "$service_name",
      "server_name": "$server_name", "upstream_response_time": "$upstream_response_time", "upstream_response_length": "$upstream_response_length",
      "upstream_cache_status": "$upstream_cache_status", "ssl_protocol": "$ssl_protocol", "ssl_cipher": "$ssl_cipher", "scheme": "$scheme", 
      "geoip_city": "$geoip2_city", "sent_http_location": "$sent_http_location", "request_uri": "$request_uri", "upstream_header_time": "$upstream_header_time",
      "pipe": "$pipe", "gzip_ratio": "$gzip_ratio", "http_cf_ray": "$http_cf_ray",
      "http_x_forwarded_for": "$http_x_forwarded_for", "http_x_forwarded_proto": "$http_x_forwarded_proto",
      "traceparent": "$http_traceparent", "tracestate": "$http_tracestate", "http_otel_traceid": "$http_otel_traceid", "http_otel_spanid": "$http_otel_spanid", "http_ot_span_context": "$http_ot_span_context"}'
  proxySetHeaders:
    X-Project: "gosell"
    X-IP-Address: $remote_addr 
    X-GeoIP-City: $geoip2_city
    X-GeoIP-Country-Name: $geoip2_city_country_name
    X-GeoIP-Country-Code: $geoip2_city_country_code
    X-GeoIP-Region-Code: $geoip2_region_code
    X-GeoIP-Region-Name: $geoip2_region_name
    X-GeoIP-Timezone: $geoip2_time_zone
    X-GeoIP-Latitude: $geoip2_latitude
    X-GeoIP-Longitude: $geoip2_longitude
    X-GeoIP-Postal-Code: $geoip2_postal_code
    X-GeoIP-Continent-Code: $geoip2_city_continent_code
    X-GeoIP-Continent-Name: $geoip2_city_continent_name
    X-GeoIP-Asn: $geoip2_asn
    X-GeoIP-Org: $geoip2_org
    X-GeoIP-Country-Geoname-id: $geoip2_city_country_geoname_id
    X-GeoIP-City-Geoname-id: $geoip2_city_geoname_id
    X-GeoIP-Dma-Code: $geoip2_dma_code
    X-GeoIP-Region-Geoname-id: $geoip2_region_geoname_id
    X-GeoIP-Subregion-Code: $geoip2_subregion_code
    X-GeoIP-Subregion-Name: $geoip2_subregion_name
    X-GeoIP-Subregion-Geoname-id: $geoip2_subregion_geoname_id
    X-Country: $geoip2_city_country_code
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"

  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 70

  lifecycle:
    preStop:
      exec:
        command:
          - /bin/sh
          - '-c'
          - >
            sleep 10; /usr/bin/nginx -c /etc/nginx/nginx.conf -s quit;
            while pgrep -x nginx; do sleep 1; done
  
  updateStrategy:
   rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 0
   type: RollingUpdate
  
  terminationGracePeriodSeconds: 600